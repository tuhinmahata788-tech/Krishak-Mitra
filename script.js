console.log('Script.js loaded successfully!');

// Language translations
const translations = {
    en: {
        // Navigation
        home: "Home",
        diseaseDetection: "Disease Detection",
        cropPrediction: "Crop Prediction",
        aiChat: "AI Chat",
        profile: "Profile",
        
        // Main content
        welcomeTitle: "Krishi Budhhi",
        welcomeSubtitle: "Your AI-powered digital farming assistant for disease detection, crop prediction, and smart agricultural solutions.",
        
        // Section Headers
        smartFarmingSolutions: "üåæ Smart Farming Solutions",
        smartFarmingDesc: "Harness the power of AI to revolutionize your farming practices with cutting-edge technology.",
        
        // Feature Cards
        diseaseDetectionCard: "Disease Detection",
        diseaseDetectionDesc: "Identify plant diseases instantly with our AI-powered image recognition system. Get accurate diagnoses and treatment recommendations.",
        cropPredictionCard: "Crop Prediction",
        cropPredictionDesc: "Discover the best crops for your land based on soil type, climate conditions, and market demand using our predictive analytics.",
        farmingTipsCard: "Farming Tips",
        farmingTipsDesc: "Access personalized farming advice, seasonal recommendations, and best practices from agricultural experts.",
        
        // Call to Action
        chatNow: "Chat Now",
        learnMore: "Learn More",
        
        // AI Chat Section
        aiChatTitle: "Krishi Budhhi AI",
        aiChatSubtitle: "Your farming assistant",
        chatPlaceholder: "Ask me about farming, crops, diseases...",
        sendButton: "Send",
        chatOnlineStatus: "Online",
        
        // About Section
        aboutTitle: "About Krishi Budhhi",
        aboutSubtitle: "Empowering farmers with AI-driven technology for sustainable and profitable agriculture.",
        ourMission: "Our Mission",
        missionText: "To revolutionize agriculture by providing farmers with intelligent, accessible, and actionable insights that increase productivity, reduce costs, and promote sustainable farming practices.",
        ourTechnology: "Our Technology",
        technologyText: "Powered by advanced machine learning algorithms, computer vision, and agricultural expertise, Krishi Budhhi delivers precise crop recommendations and disease detection capabilities.",
        
        // Features Section
        featuresTitle: "Key Features",
        
        // Testimonials
        testimonialsTitle: "What Farmers Say",
        
        // Contact Section
        contactTitle: "Get In Touch",
        contactSubtitle: "Have questions or feedback? We'd love to hear from you!",
        
        // Quick actions
        quickActions: "Quick Actions",
        cropRecommendation: "Crop Recommendation",
        weatherInfo: "Weather Info",
        marketPrices: "Market Prices",
        farmingTips: "Farming Tips",
        
        // About section
        aboutTitle: "About Krishi Budhhi",
        aboutSubtitle: "Empowering farmers with AI-driven technology for sustainable and profitable agriculture.",
        missionTitle: "Our Mission",
        missionText: "To revolutionize agriculture by providing farmers with intelligent, accessible, and actionable insights that increase productivity, reduce costs, and promote sustainable farming practices.",
        technologyTitle: "Our Technology",
        technologyText: "Powered by advanced machine learning algorithms, computer vision, and agricultural expertise, Krishi Budhhi delivers precise crop recommendations and disease detection capabilities.",
        
        // Disease Detection
        diseaseDetectionTitle: "Plant Disease Detection",
        uploadImage: "Upload Plant Image",
        analyzeButton: "Analyze Disease",
        commonDiseases: "Common Plant Diseases",
        
        // Crop Prediction
        cropPredictionTitle: "Smart Crop Prediction",
        environmentalData: "Environmental Data",
        predictButton: "Predict Best Crops",
        
        // Login
        loginTitle: "Welcome to Krishi Budhhi",
        loginSubtitle: "Your smart farming companion",
        username: "Username",
        password: "Password",
        loginButton: "Login",
        
        // Profile dropdown
        switchAccount: "Switch Account",
        logout: "Logout",
        
        // Additional UI elements
        about: "About",
        diseaseDetectionSubtitle: "Get an instant diagnosis for crop diseases. Our AI analyzes leaf images to identify issues and recommend solutions.",
        analyzeButton: "Analyze Image",
        clickToLearnMore: "Click on any disease to learn more about symptoms and treatment"
    },
    hi: {
        // Navigation
        home: "‡§π‡•ã‡§Æ",
        diseaseDetection: "‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§®",
        cropPrediction: "‡§´‡§∏‡§≤ ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä",
        aiChat: "‡§è‡§Ü‡§à ‡§ö‡•à‡§ü",
        profile: "‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤",
        
        // Main content
        welcomeTitle: "‡§ï‡•É‡§∑‡§ø ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø",
        welcomeSubtitle: "‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§®, ‡§´‡§∏‡§≤ ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä, ‡§î‡§∞ ‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§ï‡•É‡§∑‡§ø ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™‡§ï‡§æ ‡§è‡§Ü‡§à-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§ï‡•§",
        
        // Section Headers
        smartFarmingSolutions: "üåæ ‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§ñ‡•á‡§§‡•Ä ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®",
        smartFarmingDesc: "‡§Ö‡§§‡•ç‡§Ø‡§æ‡§ß‡•Å‡§®‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ö‡§™‡§®‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§•‡§æ‡§ì‡§Ç ‡§Æ‡•á‡§Ç ‡§ï‡•ç‡§∞‡§æ‡§Ç‡§§‡§ø ‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§Ü‡§à ‡§ï‡•Ä ‡§∂‡§ï‡•ç‡§§‡§ø ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§",
        
        // Feature Cards
        diseaseDetectionCard: "‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§®",
        diseaseDetectionDesc: "‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§è‡§Ü‡§à-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§õ‡§µ‡§ø ‡§™‡§π‡§ö‡§æ‡§® ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•á ‡§∞‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•ã ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§™‡§π‡§ö‡§æ‡§®‡•á‡§Ç‡•§ ‡§∏‡§ü‡•Ä‡§ï ‡§®‡§ø‡§¶‡§æ‡§® ‡§î‡§∞ ‡§â‡§™‡§ö‡§æ‡§∞ ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§",
        cropPredictionCard: "‡§´‡§∏‡§≤ ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä",
        cropPredictionDesc: "‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§ï‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞, ‡§ú‡§≤‡§µ‡§æ‡§Ø‡•Å ‡§™‡§∞‡§ø‡§∏‡•ç‡§•‡§ø‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§î‡§∞ ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§ï‡•Ä ‡§Æ‡§æ‡§Ç‡§ó ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§Ö‡§™‡§®‡•Ä ‡§≠‡•Ç‡§Æ‡§ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§∞‡•ç‡§µ‡•ã‡§§‡•ç‡§§‡§Æ ‡§´‡§∏‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§ñ‡•ã‡§ú ‡§ï‡§∞‡•á‡§Ç‡•§",
        farmingTipsCard: "‡§ñ‡•á‡§§‡•Ä ‡§ï‡•á ‡§∏‡•Å‡§ù‡§æ‡§µ",
        farmingTipsDesc: "‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§ñ‡•á‡§§‡•Ä ‡§∏‡§≤‡§æ‡§π, ‡§Æ‡•å‡§∏‡§Æ‡•Ä ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç ‡§î‡§∞ ‡§ï‡•É‡§∑‡§ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û‡•ã‡§Ç ‡§∏‡•á ‡§∏‡§∞‡•ç‡§µ‡•ã‡§§‡•ç‡§§‡§Æ ‡§™‡•ç‡§∞‡§•‡§æ‡§ì‡§Ç ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö‡•á‡§Ç‡•§",
        
        // Call to Action
        chatNow: "‡§Ö‡§≠‡•Ä ‡§ö‡•à‡§ü ‡§ï‡§∞‡•á‡§Ç",
        learnMore: "‡§î‡§∞ ‡§ú‡§æ‡§®‡•á‡§Ç",
        
        // AI Chat Section
        aiChatTitle: "‡§ï‡•É‡§∑‡§ø ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø ‡§è‡§Ü‡§à",
        aiChatSubtitle: "‡§Ü‡§™‡§ï‡§æ ‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§ï",
        chatPlaceholder: "‡§ï‡•É‡§∑‡§ø, ‡§´‡§∏‡§≤‡•ã‡§Ç, ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡•á‡§Ç...",
        sendButton: "‡§≠‡•á‡§ú‡•á‡§Ç",
        chatOnlineStatus: "‡§ë‡§®‡§≤‡§æ‡§á‡§®",
        
        // About Section
        aboutTitle: "‡§ï‡•É‡§∑‡§ø ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
        aboutSubtitle: "‡§ü‡§ø‡§ï‡§æ‡§ä ‡§î‡§∞ ‡§≤‡§æ‡§≠‡§¶‡§æ‡§Ø‡§ï ‡§ï‡•É‡§∑‡§ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§è‡§Ü‡§à-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§§‡§ï‡§®‡•Ä‡§ï ‡§∏‡•á ‡§∏‡§∂‡§ï‡•ç‡§§ ‡§¨‡§®‡§æ‡§®‡§æ‡•§",
        ourMission: "‡§π‡§Æ‡§æ‡§∞‡§æ ‡§Æ‡§ø‡§∂‡§®",
        missionText: "‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§æ‡§®, ‡§∏‡•Å‡§≤‡§≠ ‡§î‡§∞ ‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ‡§∂‡•Ä‡§≤ ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§ï‡•á ‡§ï‡•É‡§∑‡§ø ‡§Æ‡•á‡§Ç ‡§ï‡•ç‡§∞‡§æ‡§Ç‡§§‡§ø ‡§≤‡§æ‡§®‡§æ ‡§ú‡•ã ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§ï‡§§‡§æ ‡§¨‡§¢‡§º‡§æ‡§§‡•Ä ‡§π‡•à, ‡§≤‡§æ‡§ó‡§§ ‡§ï‡§Æ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à ‡§î‡§∞ ‡§ü‡§ø‡§ï‡§æ‡§ä ‡§ï‡•É‡§∑‡§ø ‡§™‡•ç‡§∞‡§•‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§µ‡§æ ‡§¶‡•á‡§§‡•Ä ‡§π‡•à‡•§",
        ourTechnology: "‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§§‡§ï‡§®‡•Ä‡§ï",
        technologyText: "‡§â‡§®‡•ç‡§®‡§§ ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§è‡§≤‡•ç‡§ó‡•ã‡§∞‡§ø‡§¶‡§Æ, ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§µ‡§ø‡§ú‡§® ‡§î‡§∞ ‡§ï‡•É‡§∑‡§ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û‡§§‡§æ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§, ‡§ï‡•É‡§∑‡§ø ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø ‡§∏‡§ü‡•Ä‡§ï ‡§´‡§∏‡§≤ ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç ‡§î‡§∞ ‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§® ‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ‡§è‡§Ç ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§",
        
        // Features Section
        featuresTitle: "‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç",
        
        // Testimonials
        testimonialsTitle: "‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•ç‡§Ø‡§æ ‡§ï‡§π‡§§‡•á ‡§π‡•à‡§Ç",
        
        // Contact Section
        contactTitle: "‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç",
        contactSubtitle: "‡§ï‡•ã‡§à ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§Ø‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§π‡•à? ‡§π‡§Æ ‡§Ü‡§™‡§∏‡•á ‡§∏‡•Å‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡•á‡§Ç‡§ó‡•á!",
        
        // Quick actions
        quickActions: "‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§ï‡§æ‡§∞‡•ç‡§Ø",
        cropRecommendation: "‡§´‡§∏‡§≤ ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂",
        weatherInfo: "‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä",
        marketPrices: "‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§≠‡§æ‡§µ",
        farmingTips: "‡§ñ‡•á‡§§‡•Ä ‡§ï‡•á ‡§ü‡§ø‡§™‡•ç‡§∏",
        
        // About section
        aboutTitle: "‡§ï‡•É‡§∑‡§ø ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
        aboutSubtitle: "‡§ü‡§ø‡§ï‡§æ‡§ä ‡§î‡§∞ ‡§≤‡§æ‡§≠‡§¶‡§æ‡§Ø‡§ï ‡§ï‡•É‡§∑‡§ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§Ü‡§à-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§§‡§ï‡§®‡•Ä‡§ï ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§∂‡§ï‡•ç‡§§ ‡§¨‡§®‡§æ‡§®‡§æ‡•§",
        missionTitle: "‡§π‡§Æ‡§æ‡§∞‡§æ ‡§Æ‡§ø‡§∂‡§®",
        missionText: "‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§ï‡§§‡§æ ‡§¨‡§¢‡§º‡§æ‡§®‡•á, ‡§≤‡§æ‡§ó‡§§ ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§ü‡§ø‡§ï‡§æ‡§ä ‡§ï‡•É‡§∑‡§ø ‡§™‡•ç‡§∞‡§•‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§µ‡§æ ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§æ‡§®, ‡§∏‡•Å‡§≤‡§≠ ‡§î‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ‡§ï ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§ï‡•á ‡§ï‡•É‡§∑‡§ø ‡§Æ‡•á‡§Ç ‡§ï‡•ç‡§∞‡§æ‡§Ç‡§§‡§ø ‡§≤‡§æ‡§®‡§æ‡•§",
        technologyTitle: "‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§§‡§ï‡§®‡•Ä‡§ï",
        technologyText: "‡§â‡§®‡•ç‡§®‡§§ ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§è‡§≤‡•ç‡§ó‡•ã‡§∞‡§ø‡§¶‡§Æ, ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§µ‡§ø‡§ú‡§º‡§® ‡§î‡§∞ ‡§ï‡•É‡§∑‡§ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û‡§§‡§æ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§, ‡§ï‡•É‡§∑‡§ø ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø ‡§∏‡§ü‡•Ä‡§ï ‡§´‡§∏‡§≤ ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç ‡§î‡§∞ ‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§® ‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ‡§è‡§Ç ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§",
        
        // Disease Detection
        diseaseDetectionTitle: "‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•Ä ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä ‡§ï‡•Ä ‡§™‡§π‡§ö‡§æ‡§®",
        uploadImage: "‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§§‡§∏‡•ç‡§µ‡•Ä‡§∞ ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
        analyzeButton: "‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§Ç",
        commonDiseases: "‡§Ü‡§Æ ‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•Ä ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡§ø‡§Ø‡§æ‡§Ç",
        
        // Crop Prediction
        cropPredictionTitle: "‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§´‡§∏‡§≤ ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä",
        environmentalData: "‡§™‡§∞‡•ç‡§Ø‡§æ‡§µ‡§∞‡§£‡•Ä‡§Ø ‡§°‡•á‡§ü‡§æ",
        predictButton: "‡§∏‡§∞‡•ç‡§µ‡•ã‡§§‡•ç‡§§‡§Æ ‡§´‡§∏‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä ‡§ï‡§∞‡•á‡§Ç",
        
        // Login
        loginTitle: "‡§ï‡•É‡§∑‡§ø ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
        loginSubtitle: "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§ï‡•É‡§∑‡§ø ‡§∏‡§æ‡§•‡•Ä",
        username: "‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ ‡§®‡§æ‡§Æ",
        password: "‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§°",
        loginButton: "‡§≤‡•â‡§ó‡§ø‡§®",
        
        // Profile dropdown
        switchAccount: "‡§ñ‡§æ‡§§‡§æ ‡§¨‡§¶‡§≤‡•á‡§Ç",
        logout: "‡§≤‡•â‡§ó‡§Ü‡§â‡§ü",
        
        // Additional UI elements
        about: "‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
        diseaseDetectionSubtitle: "‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§®‡§ø‡§¶‡§æ‡§® ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§π‡§Æ‡§æ‡§∞‡§æ AI ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§™‡§π‡§ö‡§æ‡§® ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§∏‡•Å‡§ù‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡§§‡•ç‡§§‡•Ä ‡§ï‡•Ä ‡§õ‡§µ‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§",
        analyzeButton: "‡§õ‡§µ‡§ø ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§Ç",
        clickToLearnMore: "‡§≤‡§ï‡•ç‡§∑‡§£ ‡§î‡§∞ ‡§â‡§™‡§ö‡§æ‡§∞ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§Ö‡§ß‡§ø‡§ï ‡§ú‡§æ‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç"
    },
    ml: {
        // Navigation
        home: "‡¥π‡µã‡¥Ç",
        diseaseDetection: "‡¥∞‡µã‡¥ó ‡¥®‡¥ø‡µº‡¥£‡¥Ø‡¥Ç",
        cropPrediction: "‡¥µ‡¥ø‡¥≥ ‡¥™‡µç‡¥∞‡¥µ‡¥ö‡¥®‡¥Ç",
        aiChat: "‡¥é‡¥ê ‡¥ö‡¥æ‡¥±‡µç‡¥±‡µç",
        profile: "‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ",
        
        // Main content
        welcomeTitle: "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥¨‡µÅ‡¥¶‡µç‡¥ß‡¥ø",
        welcomeSubtitle: "‡¥∞‡µã‡¥ó ‡¥®‡¥ø‡µº‡¥£‡¥Ø‡¥Ç, ‡¥µ‡¥ø‡¥≥ ‡¥™‡µç‡¥∞‡¥µ‡¥ö‡¥®‡¥Ç, ‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥ï‡¥æ‡µº‡¥∑‡¥ø‡¥ï ‡¥™‡¥∞‡¥ø‡¥π‡¥æ‡¥∞‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡¥æ‡¥Ø‡¥ø ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ AI-‡¥™‡¥µ‡µº‡¥°‡µç ‡¥°‡¥ø‡¥ú‡¥ø‡¥±‡µç‡¥±‡µΩ ‡¥ï‡¥æ‡µº‡¥∑‡¥ø‡¥ï ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø.",
        
        // AI Chat
        aiChatTitle: "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥¨‡µÅ‡¥¶‡µç‡¥ß‡¥ø AI",
        aiChatSubtitle: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ï‡¥æ‡µº‡¥∑‡¥ø‡¥ï ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø",
        chatPlaceholder: "‡¥ï‡µÉ‡¥∑‡¥ø, ‡¥µ‡¥ø‡¥≥‡¥ï‡µæ, ‡¥∞‡µã‡¥ó‡¥ô‡µç‡¥ô‡¥≥‡µÜ‡¥ï‡µç‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥ö‡µã‡¥¶‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï...",
        sendButton: "‡¥Ö‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
        
        // Quick actions
        quickActions: "‡¥™‡µÜ‡¥ü‡µç‡¥ü‡µÜ‡¥®‡µç‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ô‡µç‡¥ô‡µæ",
        cropRecommendation: "‡¥µ‡¥ø‡¥≥ ‡¥∂‡µÅ‡¥™‡¥æ‡µº‡¥∂",
        weatherInfo: "‡¥ï‡¥æ‡¥≤‡¥æ‡¥µ‡¥∏‡µç‡¥•‡¥æ ‡¥µ‡¥ø‡¥µ‡¥∞‡¥ô‡µç‡¥ô‡µæ",
        marketPrices: "‡¥Æ‡¥æ‡µº‡¥ï‡µç‡¥ï‡¥±‡µç‡¥±‡µç ‡¥µ‡¥ø‡¥≤‡¥ï‡µæ",
        farmingTips: "‡¥ï‡¥æ‡µº‡¥∑‡¥ø‡¥ï ‡¥®‡µÅ‡¥±‡µÅ‡¥ô‡µç‡¥ô‡µÅ‡¥ï‡µæ",
        
        // About section
        aboutTitle: "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥¨‡µÅ‡¥¶‡µç‡¥ß‡¥ø‡¥Ø‡µÜ‡¥ï‡µç‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç",
        aboutSubtitle: "‡¥∏‡µÅ‡¥∏‡µç‡¥•‡¥ø‡¥∞‡¥µ‡µÅ‡¥Ç ‡¥≤‡¥æ‡¥≠‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø ‡¥ï‡µÉ‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥Ø‡¥ø AI-‡¥°‡µç‡¥∞‡¥ø‡¥µ‡µª ‡¥∏‡¥æ‡¥ô‡µç‡¥ï‡µá‡¥§‡¥ø‡¥ï‡¥µ‡¥ø‡¥¶‡µç‡¥Ø ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥ï‡µº‡¥∑‡¥ï‡¥∞‡µÜ ‡¥∂‡¥æ‡¥ï‡µç‡¥§‡µÄ‡¥ï‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ.",
        missionTitle: "‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥¶‡µó‡¥§‡µç‡¥Ø‡¥Ç",
        missionText: "‡¥â‡µΩ‡¥™‡µç‡¥™‡¥æ‡¥¶‡¥®‡¥ï‡µç‡¥∑‡¥Æ‡¥§ ‡¥µ‡µº‡¥ß‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥≤‡¥µ‡µç ‡¥ï‡µÅ‡¥±‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥∏‡µÅ‡¥∏‡µç‡¥•‡¥ø‡¥∞ ‡¥ï‡¥æ‡µº‡¥∑‡¥ø‡¥ï ‡¥∞‡µÄ‡¥§‡¥ø‡¥ï‡µæ ‡¥™‡µç‡¥∞‡µã‡¥§‡µç‡¥∏‡¥æ‡¥π‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥® ‡¥¨‡µÅ‡¥¶‡µç‡¥ß‡¥ø‡¥™‡¥∞‡¥µ‡µÅ‡¥Ç ‡¥Ü‡¥ï‡µç‡¥∏‡¥∏‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥µ‡µÅ‡¥®‡µç‡¥®‡¥§‡µÅ‡¥Ç ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ï‡µç‡¥∑‡¥Æ‡¥µ‡µÅ‡¥Æ‡¥æ‡¥Ø ‡¥â‡µæ‡¥ï‡µç‡¥ï‡¥æ‡¥¥‡µç‡¥ö‡¥ï‡µæ ‡¥ï‡µº‡¥∑‡¥ï‡µº‡¥ï‡µç‡¥ï‡µç ‡¥®‡µΩ‡¥ï‡¥ø‡¥ï‡µç‡¥ï‡µä‡¥£‡µç‡¥ü‡µç ‡¥ï‡µÉ‡¥∑‡¥ø‡¥Ø‡¥ø‡µΩ ‡¥µ‡¥ø‡¥™‡µç‡¥≤‡¥µ‡¥Ç ‡¥∏‡µÉ‡¥∑‡µç‡¥ü‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï.",
        technologyTitle: "‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥∏‡¥æ‡¥ô‡µç‡¥ï‡µá‡¥§‡¥ø‡¥ï‡¥µ‡¥ø‡¥¶‡µç‡¥Ø",
        technologyText: "‡¥µ‡¥ø‡¥™‡µÅ‡¥≤‡¥Æ‡¥æ‡¥Ø ‡¥Æ‡µÜ‡¥∑‡µÄ‡µª ‡¥≤‡µá‡¥£‡¥ø‡¥Ç‡¥ó‡µç ‡¥Ö‡µΩ‡¥ó‡µã‡¥∞‡¥ø‡¥§‡¥ô‡µç‡¥ô‡µæ, ‡¥ï‡¥Æ‡µç‡¥™‡µç‡¥Ø‡µÇ‡¥ü‡µç‡¥ü‡µº ‡¥µ‡¥ø‡¥∑‡µª, ‡¥ï‡¥æ‡µº‡¥∑‡¥ø‡¥ï ‡¥µ‡µà‡¥¶‡¥ó‡µç‡¥ß‡µç‡¥Ø‡¥Ç ‡¥é‡¥®‡µç‡¥®‡¥ø‡¥µ‡¥Ø‡¥æ‡µΩ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥¨‡µÅ‡¥¶‡µç‡¥ß‡¥ø ‡¥ï‡µÉ‡¥§‡µç‡¥Ø‡¥Æ‡¥æ‡¥Ø ‡¥µ‡¥ø‡¥≥ ‡¥∂‡µÅ‡¥™‡¥æ‡µº‡¥∂‡¥ï‡¥≥‡µÅ‡¥Ç ‡¥∞‡µã‡¥ó ‡¥®‡¥ø‡µº‡¥£‡¥Ø ‡¥ï‡¥¥‡¥ø‡¥µ‡µÅ‡¥ï‡¥≥‡µÅ‡¥Ç ‡¥®‡µΩ‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ.",
        
        // Disease Detection
        diseaseDetectionTitle: "‡¥∏‡¥∏‡µç‡¥Ø ‡¥∞‡µã‡¥ó ‡¥®‡¥ø‡µº‡¥£‡¥Ø‡¥Ç",
        uploadImage: "‡¥∏‡¥∏‡µç‡¥Ø ‡¥ö‡¥ø‡¥§‡µç‡¥∞‡¥Ç ‡¥Ö‡¥™‡µç‚Äå‡¥≤‡µã‡¥°‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
        analyzeButton: "‡¥∞‡µã‡¥ó‡¥Ç ‡¥µ‡¥ø‡¥∂‡¥ï‡¥≤‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
        commonDiseases: "‡¥∏‡¥æ‡¥ß‡¥æ‡¥∞‡¥£ ‡¥∏‡¥∏‡µç‡¥Ø ‡¥∞‡µã‡¥ó‡¥ô‡µç‡¥ô‡µæ",
        
        // Crop Prediction
        cropPredictionTitle: "‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥µ‡¥ø‡¥≥ ‡¥™‡µç‡¥∞‡¥µ‡¥ö‡¥®‡¥Ç",
        environmentalData: "‡¥™‡¥æ‡¥∞‡¥ø‡¥∏‡µç‡¥•‡¥ø‡¥§‡¥ø‡¥ï ‡¥°‡¥æ‡¥±‡µç‡¥±",
        predictButton: "‡¥Æ‡¥ø‡¥ï‡¥ö‡µç‡¥ö ‡¥µ‡¥ø‡¥≥‡¥ï‡µæ ‡¥™‡µç‡¥∞‡¥µ‡¥ö‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
        
        // Login
        loginTitle: "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥¨‡µÅ‡¥¶‡µç‡¥ß‡¥ø‡¥Ø‡¥ø‡¥≤‡µá‡¥ï‡µç‡¥ï‡µç ‡¥∏‡µç‡¥µ‡¥æ‡¥ó‡¥§‡¥Ç",
        loginSubtitle: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥ï‡¥æ‡µº‡¥∑‡¥ø‡¥ï ‡¥ï‡µÇ‡¥ü‡µç‡¥ü‡¥æ‡¥≥‡¥ø",
        username: "‡¥â‡¥™‡¥Ø‡µã‡¥ï‡µç‡¥§‡µÉ‡¥®‡¥æ‡¥Æ‡¥Ç",
        password: "‡¥™‡¥æ‡¥∏‡µç‚Äå‡¥µ‡µá‡¥°‡µç",
        loginButton: "‡¥≤‡µã‡¥ó‡¥ø‡µª",
        
        // Profile dropdown
        switchAccount: "‡¥Ö‡¥ï‡µç‡¥ï‡µó‡¥£‡µç‡¥ü‡µç ‡¥Æ‡¥æ‡¥±‡µÅ‡¥ï",
        logout: "‡¥≤‡µã‡¥ó‡µó‡¥ü‡µç‡¥ü‡µç",
        
        // Additional UI elements
        about: "‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç",
        diseaseDetectionSubtitle: "‡¥µ‡¥ø‡¥≥ ‡¥∞‡µã‡¥ó‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥§‡µΩ‡¥ï‡µç‡¥∑‡¥£ ‡¥∞‡µã‡¥ó‡¥®‡¥ø‡µº‡¥£‡¥Ø‡¥Ç ‡¥®‡µá‡¥ü‡µÅ‡¥ï. ‡¥™‡µç‡¥∞‡¥∂‡µç‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥§‡¥ø‡¥∞‡¥ø‡¥ö‡µç‡¥ö‡¥±‡¥ø‡¥Ø‡¥æ‡¥®‡µÅ‡¥Ç ‡¥™‡¥∞‡¥ø‡¥π‡¥æ‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥∂‡µÅ‡¥™‡¥æ‡µº‡¥∂ ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥®‡µÅ‡¥Ç ‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ AI ‡¥á‡¥≤ ‡¥ö‡¥ø‡¥§‡µç‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥µ‡¥ø‡¥∂‡¥ï‡¥≤‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ.",
        analyzeButton: "‡¥ö‡¥ø‡¥§‡µç‡¥∞‡¥Ç ‡¥µ‡¥ø‡¥∂‡¥ï‡¥≤‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
        clickToLearnMore: "‡¥≤‡¥ï‡µç‡¥∑‡¥£‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥Ç ‡¥ö‡¥ø‡¥ï‡¥ø‡¥§‡µç‡¥∏‡¥Ø‡µÅ‡¥Ç ‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥ï‡µÇ‡¥ü‡µÅ‡¥§‡¥≤‡¥±‡¥ø‡¥Ø‡¥æ‡µª ‡¥è‡¥§‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥∞‡µã‡¥ó‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥ï‡µç‡¥≤‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï"
    }
};

// Current language state
let currentLanguage = localStorage.getItem('krishiBudhhiLanguage') || 'en';

// Language switching function
function switchLanguage(lang) {
    console.log('Switching language to:', lang);
    currentLanguage = lang;
    localStorage.setItem('krishiBudhhiLanguage', lang);
    console.log('Language set in localStorage:', localStorage.getItem('krishiBudhhiLanguage'));
    updateLanguageDisplay();
    translatePage();
    console.log('Language switched to:', lang);
}

// Update language toggle display
function updateLanguageDisplay() {
    const langButtons = document.querySelectorAll('.lang-btn');
    langButtons.forEach(btn => {
        btn.classList.remove('active');
        if (btn.dataset.lang === currentLanguage) {
            btn.classList.add('active');
        }
    });
}

// Translate page elements
function translatePage() {
    console.log('Translating page to:', currentLanguage);
    const elements = document.querySelectorAll('[data-translate]');
    console.log('Found elements with data-translate:', elements.length);
    
    elements.forEach((element, index) => {
        const key = element.getAttribute('data-translate');
        console.log(`Element ${index + 1}:`, {
            nodeName: element.nodeName,
            key: key,
            currentText: element.textContent || element.placeholder,
            hasTranslation: !!(translations[currentLanguage] && translations[currentLanguage][key])
        });
        
        if (translations[currentLanguage] && translations[currentLanguage][key]) {
            if (element.tagName === 'INPUT' && element.type === 'text') {
                element.placeholder = translations[currentLanguage][key];
                console.log(`Updated input placeholder for key '${key}':`, element.placeholder);
            } else {
                element.textContent = translations[currentLanguage][key];
                console.log(`Updated text for key '${key}':`, element.textContent);
            }
        } else {
            console.warn(`No translation found for key '${key}' in language '${currentLanguage}'`);
        }
    });
    
    console.log('Translation complete');
}

// Initialize page function
function initializePage() {
    // Check if user is logged in (only for non-login pages)
    if (!window.location.pathname.includes('login.html')) {
        const isLoggedIn = localStorage.getItem('krishiBudhhiLoggedIn');
        if (!isLoggedIn) {
            window.location.href = 'login.html';
            return;
        }
    }

    // --- COMMON ELEMENTS (for all pages) ---
    const htmlElement = document.documentElement;
    const darkModeToggle = document.getElementById('dark-mode-toggle');
    const themeIconMoon = document.getElementById('theme-icon-moon');
    const themeIconSun = document.getElementById('theme-icon-sun');
    const languageToggle = document.getElementById('language-toggle');
    const languageToggleSwitch = document.getElementById('language-toggle-switch');
    const langEN = document.getElementById('lang-en');
    const langHI = document.getElementById('lang-hi');
    const allNavLinks = document.querySelectorAll('.nav-link');
    const logoutButton = document.getElementById('logout-button');

    // --- PAGE-SPECIFIC ELEMENTS ---
    const pageContainer = document.getElementById('page-container');
    const homePageTemplate = document.getElementById('home-page-template');
    
    // Disease Detection Page
    const diseaseUploadInput = document.getElementById('disease-upload-input');
    const uploadButton = document.getElementById('upload-button');
    const previewContainer = document.getElementById('preview-container');
    const imagePreview = document.getElementById('image-preview');
    const analyzeButton = document.getElementById('analyze-button');
    const resultContainer = document.getElementById('result-container');

    // Crop Prediction Page
    const cropForm = document.getElementById('crop-form');
    const cropResultContainer = document.getElementById('crop-result-container');

    // --- State Management ---
    let isDarkMode = localStorage.getItem('darkMode') === 'true';

    // --- COMMON FUNCTIONS (for all pages) ---
    const applyDarkMode = () => {
        if (isDarkMode) {
            htmlElement.classList.add('dark');
            if (themeIconMoon) themeIconMoon.classList.add('hidden');
            if (themeIconSun) themeIconSun.classList.remove('hidden');
        } else {
            htmlElement.classList.remove('dark');
            if (themeIconMoon) themeIconMoon.classList.remove('hidden');
            if (themeIconSun) themeIconSun.classList.add('hidden');
        }
    };
    
    const setActiveLink = () => {
        const currentPage = window.location.pathname.split('/').pop() || 'index.html';
        document.querySelectorAll('header a.nav-link, header a.px-3').forEach(link => {
             const linkPage = (link.getAttribute('href') || '').split('/').pop();
             if (linkPage === currentPage) {
                 link.classList.add('active');
             } else {
                 link.classList.remove('active');
             }
        });
    };

    // --- EVENT LISTENERS (for all pages) ---
    if (darkModeToggle) {
        darkModeToggle.addEventListener('click', () => {
            isDarkMode = !isDarkMode;
            localStorage.setItem('darkMode', isDarkMode);
            applyDarkMode();
        });
    }

    // Initialize language on page load
    updateLanguageDisplay();
    translatePage();

    // Add event listeners for language buttons
    const langButtons = document.querySelectorAll('.lang-btn');
    langButtons.forEach(btn => {
        btn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            const lang = btn.getAttribute('data-lang');
            console.log('Language button clicked:', lang);
            switchLanguage(lang);
        });
    });
    
    console.log('Language buttons initialized:', langButtons.length);

    // Profile dropdown functionality
    const profileButton = document.getElementById('profile-button');
    const profileDropdown = document.getElementById('profile-dropdown');
    const logoutOption = document.getElementById('logout-option');
    
    if (profileButton && profileDropdown) {
        profileButton.addEventListener('click', function(e) {
            e.stopPropagation();
            profileDropdown.classList.toggle('hidden');
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
            if (!profileButton.contains(e.target) && !profileDropdown.contains(e.target)) {
                profileDropdown.classList.add('hidden');
            }
        });
    }

    // Profile dropdown button functionality
    const profileManagementBtn = document.getElementById('profile-management-btn');
    const manageSubscriptionBtn = document.getElementById('manage-subscription-btn');
    const switchAccountBtn = document.getElementById('switch-account-btn');
    
    if (switchAccountBtn) {
        switchAccountBtn.addEventListener('click', function() {
            localStorage.removeItem('krishiBudhhiLoggedIn');
            localStorage.removeItem('krishiBudhhiUsername');
            window.location.href = 'login.html';
        });
    }
    
    // Logout functionality (for both old logout button and new dropdown option)
    if (logoutOption) {
        logoutOption.addEventListener('click', function() {
            localStorage.removeItem('krishiBudhhiLoggedIn');
            localStorage.removeItem('krishiBudhhiUsername');
            window.location.href = 'login.html';
        });
    }
    
    if(logoutButton) {
        logoutButton.addEventListener('click', () => {
            localStorage.removeItem('krishakMitraLoggedIn');
            window.location.href = 'login.html';
        });
    }
    
    // --- PAGE-SPECIFIC LOGIC ---

    // 1. Home Page Logic (index.html)
    if (pageContainer && homePageTemplate) {
        const renderPlaceholderPage = (title, description) => {
            pageContainer.innerHTML = `<div class="page w-full h-screen flex items-center justify-center pt-16 text-center" style="display: flex;"><div class="fade-in"><h1 class="text-4xl font-bold">${title}</h1><p class="mt-4 text-lg text-gray-600 dark:text-gray-400">${description}</p></div></div>`;
        };
        
        const renderHomePage = () => {
            pageContainer.innerHTML = '';
            const homePageContent = homePageTemplate.content.cloneNode(true);
            pageContainer.appendChild(homePageContent);
            
            const homePageDiv = document.getElementById('home-page');
            homePageDiv.style.display = 'flex';
            
            // Update greeting with actual username
            const greetingMessage = document.getElementById('greeting-message');
            const storedUsername = localStorage.getItem('krishiBudhhiUsername');
            if (greetingMessage && storedUsername) {
                greetingMessage.textContent = `Hello ${storedUsername}!`;
            }
            
            // --- SLIDESHOW LOGIC ---
            const slideshowImages = document.querySelectorAll('.slideshow-image');
            let currentSlideIndex = 0;

            if (slideshowImages.length > 1) {
                // Initialize: make first image visible, others hidden
                slideshowImages.forEach((img, index) => {
                    if (index === 0) {
                        img.classList.remove('opacity-0');
                        img.classList.add('opacity-30');
                    } else {
                        img.classList.add('opacity-0');
                        img.classList.remove('opacity-30');
                    }
                });

                setInterval(() => {
                    // Hide current slide
                    slideshowImages[currentSlideIndex].classList.add('opacity-0');
                    slideshowImages[currentSlideIndex].classList.remove('opacity-30');
                    
                    // Move to the next slide
                    currentSlideIndex = (currentSlideIndex + 1) % slideshowImages.length;
                    
                    // Show the new slide
                    slideshowImages[currentSlideIndex].classList.remove('opacity-0');
                    slideshowImages[currentSlideIndex].classList.add('opacity-30');

                }, 4000); // Change image every 4 seconds
            }
            
            const chatForm = document.getElementById('chat-form');
            const userInput = document.getElementById('user-input');
            const chatMessagesContainer = document.getElementById('chat-messages');
            const fileUploadBtn = document.getElementById('file-upload-btn');
            const chatFileInput = document.getElementById('chat-file-input');
            const voiceInputBtn = document.getElementById('voice-input-btn');
            
            // Auto-resize textarea
            if (userInput && userInput.tagName === 'TEXTAREA') {
                userInput.addEventListener('input', function() {
                    this.style.height = 'auto';
                    this.style.height = Math.min(this.scrollHeight, 128) + 'px';
                });
                
                // Handle Enter key for sending messages
                userInput.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' && !e.shiftKey) {
                        e.preventDefault();
                        chatForm.dispatchEvent(new Event('submit'));
                    }
                });
            }
            
            // Voice recognition setup
            let recognition = null;
            let isListening = false;
            
            if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
                const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
                recognition = new SpeechRecognition();
                recognition.continuous = false;
                recognition.interimResults = false;
                recognition.lang = 'en-US';
                
                recognition.onstart = () => {
                    isListening = true;
                    voiceInputBtn.classList.add('text-red-500', 'animate-pulse');
                    voiceInputBtn.classList.remove('text-gray-400');
                };
                
                recognition.onresult = (event) => {
                    const transcript = event.results[0][0].transcript;
                    userInput.value = transcript;
                    // Auto-submit the transcribed text
                    setTimeout(() => {
                        if (userInput.value.trim()) {
                            chatForm.dispatchEvent(new Event('submit'));
                        }
                    }, 500);
                };
                
                recognition.onend = () => {
                    isListening = false;
                    voiceInputBtn.classList.remove('text-red-500', 'animate-pulse');
                    voiceInputBtn.classList.add('text-gray-400');
                };
                
                recognition.onerror = (event) => {
                    isListening = false;
                    voiceInputBtn.classList.remove('text-red-500', 'animate-pulse');
                    voiceInputBtn.classList.add('text-gray-400');
                    console.error('Speech recognition error:', event.error);
                };
            }

            const addMessage = (text, sender, isFile = false, fileName = '') => {
                const wrapper = document.createElement('div');
                wrapper.className = `flex ${sender === 'user' ? 'justify-end' : 'justify-start'} mb-4`;
                const bubble = document.createElement('div');
                bubble.className = `max-w-xs lg:max-w-md px-4 py-3 rounded-2xl shadow ${sender === 'user' ? 'bg-green-600 text-white rounded-br-none' : 'bg-white dark:bg-gray-800 dark:text-gray-200 rounded-bl-none'}`;
                
                if (isFile) {
                    bubble.innerHTML = `
                        <div class="flex items-center space-x-2">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"></path>
                            </svg>
                            <span class="text-sm">${fileName}</span>
                        </div>
                        ${text ? `<p class="mt-2">${text}</p>` : ''}
                    `;
                } else {
                    bubble.textContent = text;
                }
                
                wrapper.appendChild(bubble);
                if (chatMessagesContainer) {
                    chatMessagesContainer.appendChild(wrapper);
                    chatMessagesContainer.scrollTop = chatMessagesContainer.scrollHeight;
                }
            };

            // File upload functionality
            if (fileUploadBtn && chatFileInput) {
                fileUploadBtn.addEventListener('click', () => {
                    chatFileInput.click();
                });
                
                chatFileInput.addEventListener('change', (e) => {
                    const file = e.target.files[0];
                    if (file) {
                        const fileName = file.name;
                        const fileSize = (file.size / 1024 / 1024).toFixed(2); // MB
                        addMessage(`Uploaded: ${fileName} (${fileSize} MB)`, 'user', true, fileName);
                        
                        // Simulate AI response for file upload
                        setTimeout(() => {
                            if (file.type.startsWith('image/')) {
                                addMessage("I can see your image! If this is a plant photo, I can help identify diseases or provide care advice. What would you like to know about it?", 'bot');
                            } else {
                                addMessage(`I've received your file: ${fileName}. How can I help you with this document?`, 'bot');
                            }
                        }, 1000);
                        
                        // Clear the input
                        chatFileInput.value = '';
                    }
                });
            }
            
            // Voice input functionality
            if (voiceInputBtn) {
                voiceInputBtn.addEventListener('click', () => {
                    if (!recognition) {
                        addMessage("Voice input is not supported in your browser. Please try typing your message.", 'bot');
                        return;
                    }
                    
                    if (isListening) {
                        recognition.stop();
                    } else {
                        try {
                            recognition.start();
                        } catch (error) {
                            console.error('Speech recognition error:', error);
                            addMessage("Unable to start voice recognition. Please check your microphone permissions.", 'bot');
                        }
                    }
                });
            }
            
            chatForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const userText = userInput.value.trim();
                if (userText) {
                    addMessage(userText, 'user');
                    userInput.value = '';
                    setTimeout(() => addMessage("Thank you for your query. I am processing...", 'bot'), 1000);
                }
            });

            // Quick question buttons functionality
            const quickQuestionButtons = document.querySelectorAll('.quick-question');
            quickQuestionButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const question = button.getAttribute('data-question');
                    if (question) {
                        addMessage(question, 'user');
                        setTimeout(() => {
                            let response = "Thank you for your question. I'm processing your request...";
                            if (question.includes('crops')) {
                                response = "Based on your location and season, I recommend considering crops like wheat, rice, or vegetables. For specific recommendations, please provide your soil type and climate conditions.";
                            } else if (question.includes('diseases')) {
                                response = "To identify plant diseases, look for symptoms like discolored leaves, spots, wilting, or unusual growth. You can also use our Disease Detection feature to upload plant images for AI analysis.";
                            } else if (question.includes('weather')) {
                                response = "Weather planning is crucial for farming success. Monitor rainfall patterns, temperature changes, and seasonal forecasts. I can help you plan irrigation and planting schedules based on weather data.";
                            } else if (question.includes('soil')) {
                                response = "Improving soil quality involves regular testing, adding organic matter, proper crop rotation, and balanced fertilization. Consider composting and cover crops to enhance soil health naturally.";
                            }
                            addMessage(response, 'bot');
                        }, 1500);
                    }
                });
            });

            // Add suggestion button functionality
            const suggestionButtons = document.querySelectorAll('.suggestion-btn');
            suggestionButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const question = button.textContent.trim();
                    userInput.value = question;
                    chatForm.dispatchEvent(new Event('submit'));
                });
            });
            
            // Initialize chat with welcome message if no messages exist
            if (chatMessagesContainer && chatMessagesContainer.children.length === 1) {
                // Keep the existing welcome message structure
            }
        };

        allNavLinks.forEach(link => {
            if (link.href && link.href.includes('#')) {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    renderPlaceholderPage(link.hash.substring(1), 'This feature is under development.');
                });
            }
        });
        renderHomePage();
    }

    // 2. Disease Detection Page Logic
    if (uploadButton && diseaseUploadInput) {
        uploadButton.addEventListener('click', () => diseaseUploadInput.click());
        diseaseUploadInput.addEventListener('change', (event) => {
            const file = event.target.files[0];
            if (file) {
                imagePreview.src = URL.createObjectURL(file);
                previewContainer.classList.remove('hidden');
                resultContainer.classList.add('hidden');
            }
        });
        analyzeButton.addEventListener('click', () => {
            resultContainer.innerHTML = `
                <div class="fade-in p-4 border rounded-lg bg-gray-50 dark:bg-gray-700/50">
                    <h2 class="text-2xl font-bold text-gray-800 dark:text-white">Analysis Result:</h2>
                    <p class="mt-2 text-lg text-red-600 dark:text-red-400 font-semibold">Potato Late Blight</p>
                    <p class="mt-2 text-gray-600 dark:text-gray-400">Our analysis indicates a 95% probability of Late Blight. Apply a fungicide containing mancozeb or chlorothalonil immediately. Ensure proper plant spacing for better air circulation.</p>
                </div>
            `;
            resultContainer.classList.remove('hidden');
        });
    }
    
    // 3. Crop Prediction Page Logic
    if (cropForm) {
        cropForm.addEventListener('submit', (e) => {
            e.preventDefault();
            cropResultContainer.innerHTML = `
                <div class="fade-in p-4 border rounded-lg bg-gray-50 dark:bg-gray-700/50">
                    <h2 class="text-2xl font-bold text-gray-800 dark:text-white">Prediction Result:</h2>
                    <p class="mt-2 text-3xl text-green-600 dark:text-green-400 font-bold">Rice (Paddy)</p>
                    <p class="mt-2 text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">Based on the data, Rice is the most suitable crop. This choice is supported by the high rainfall and balanced soil nutrient levels provided.</p>
                </div>
            `;
            cropResultContainer.classList.remove('hidden');
        });
    }

    // --- INITIALIZE ON ALL PAGES ---
    applyDarkMode();
    setActiveLink();
    
    // Initialize language
    updateLanguageDisplay();
    translatePage();
}

// Chat input functionality
function setupChatInput() {
    const chatForm = document.getElementById('chat-form');
    const userInput = document.getElementById('user-input');
    const fileInput = document.getElementById('chat-file-input');
    const attachFileBtn = document.getElementById('attach-file-btn');
    const filePreview = document.getElementById('file-preview');
    const fileName = document.getElementById('file-name');
    const removeFileBtn = document.getElementById('remove-file-btn');
    let selectedFile = null;

    // Auto-resize textarea as user types
    userInput.addEventListener('input', function() {
        this.style.height = 'auto';
        this.style.height = (this.scrollHeight) + 'px';
    });

    // Handle file selection
    attachFileBtn.addEventListener('click', () => fileInput.click());

    fileInput.addEventListener('change', (e) => {
        if (e.target.files.length > 0) {
            selectedFile = e.target.files[0];
            fileName.textContent = selectedFile.name;
            filePreview.classList.remove('hidden');
            userInput.placeholder = 'Add a message (optional)';
        }
    });

    // Remove selected file
    removeFileBtn.addEventListener('click', () => {
        selectedFile = null;
        fileInput.value = '';
        filePreview.classList.add('hidden');
        userInput.placeholder = 'Ask me about farming, crops, diseases...';
    });

    // Handle form submission
    chatForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const message = userInput.value.trim();
        
        if (!message && !selectedFile) return;

        // Here you would typically send the message and/or file to your backend
        console.log('Message:', message);
        if (selectedFile) {
            console.log('File selected:', selectedFile.name);
            // Reset file input after submission
            selectedFile = null;
            fileInput.value = '';
            filePreview.classList.add('hidden');
        }

        // Clear input and reset height
        userInput.value = '';
        userInput.style.height = 'auto';
        userInput.placeholder = 'Ask me about farming, crops, diseases...';
    });
}

// Initialize the page
document.addEventListener('DOMContentLoaded', () => {
    initializePage();
    setupChatInput();
});
